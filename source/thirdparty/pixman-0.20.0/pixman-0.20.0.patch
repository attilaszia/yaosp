diff -Nru pixman-0.20.0-orig/config.h pixman-0.20.0/config.h
--- pixman-0.20.0-orig/config.h	1970-01-01 01:00:00.000000000 +0100
+++ pixman-0.20.0/config.h	2010-12-07 12:46:10.000000000 +0100
@@ -0,0 +1,143 @@
+/* config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Define if building universal (internal helper macro) */
+#undef AC_APPLE_UNIVERSAL_BUILD
+
+/* Whether we have alarm() */
+#undef HAVE_ALARM
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#undef HAVE_DLFCN_H
+
+/* Define to 1 if you have the `getisax' function. */
+#undef HAVE_GETISAX
+
+/* Whether we have getpagesize() */
+#define HAVE_GETPAGESIZE 1
+
+/* Whether we have gettimeofday() */
+#define HAVE_GETTIMEOFDAY 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the `pixman-1' library (-lpixman-1). */
+#undef HAVE_LIBPIXMAN_1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#undef HAVE_MEMORY_H
+
+/* Whether we have mprotect() */
+#undef HAVE_MPROTECT
+
+/* Whether we have posix_memalign() */
+#undef HAVE_POSIX_MEMALIGN
+
+/* Whether pthread_setspecific() is supported */
+#undef HAVE_PTHREAD_SETSPECIFIC
+
+/* Whether we have sigaction() */
+#undef HAVE_SIGACTION
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#undef HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if we have <sys/mman.h> */
+#undef HAVE_SYS_MMAN_H
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#undef LT_OBJDIR
+
+/* Name of package */
+#define PACKAGE "pixman"
+
+/* Define to the address where bug reports for this package should be sent. */
+#undef PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#undef PACKAGE_NAME
+
+/* Define to the full name and version of this package. */
+#undef PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#undef PACKAGE_TARNAME
+
+/* Define to the home page for this package. */
+#undef PACKAGE_URL
+
+/* Define to the version of this package. */
+#undef PACKAGE_VERSION
+
+/* enable TIMER_BEGIN/TIMER_END macros */
+#undef PIXMAN_TIMERS
+
+/* The size of `long', as computed by sizeof. */
+#define SIZEOF_LONG 4
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Whether the tool chain supports __thread */
+#undef TOOLCHAIN_SUPPORTS__THREAD
+
+/* use ARM NEON assembly optimizations */
+#undef USE_ARM_NEON
+
+/* use ARM SIMD assembly optimizations */
+#undef USE_ARM_SIMD
+
+/* use GNU-style inline assembler */
+#define USE_GCC_INLINE_ASM 1
+
+/* use MMX compiler intrinsics */
+#undef USE_MMX
+
+/* use OpenMP in the test suite */
+#undef USE_OPENMP
+
+/* use SSE2 compiler intrinsics */
+#undef USE_SSE2
+
+/* use VMX compiler intrinsics */
+#undef USE_VMX
+
+/* Version number of package */
+#undef VERSION
+
+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
+   significant byte first (like Motorola and SPARC, unlike Intel). */
+#if defined AC_APPLE_UNIVERSAL_BUILD
+# if defined __BIG_ENDIAN__
+#  define WORDS_BIGENDIAN 1
+# endif
+#else
+# ifndef WORDS_BIGENDIAN
+#  undef WORDS_BIGENDIAN
+# endif
+#endif
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+#undef inline
+#endif
diff -Nru pixman-0.20.0-orig/pbuild.xml pixman-0.20.0/pbuild.xml
--- pixman-0.20.0-orig/pbuild.xml	1970-01-01 01:00:00.000000000 +0100
+++ pixman-0.20.0/pbuild.xml	2010-12-07 12:49:22.000000000 +0100
@@ -0,0 +1,89 @@
+<!--
+
+This file is part of the yaosp build system
+
+Copyright (c) 2010 Zoltan Kovacs
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of version 2 of the GNU General Public License
+as published by the Free Software Foundation.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License along
+with this program; if not, write to the Free Software Foundation, Inc.,
+51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+-->
+
+<build default="all">
+    <pinclude file="${toplevel}/config/paths.xml"/>
+    <pinclude file="${toplevel}/config/targets.xml" targets="clean,prepare,all"/>
+
+    <array name="files">
+        <item>pixman/pixman-access.c</item>
+        <item>pixman/pixman-access-accessors.c</item>
+        <item>pixman/pixman-cpu.c</item>
+        <item>pixman/pixman-gradient-walker.c</item>
+        <item>pixman/pixman-region16.c</item>
+        <item>pixman/pixman-region32.c</item>
+        <item>pixman/pixman-image.c</item>
+        <item>pixman/pixman-implementation.c</item>
+        <item>pixman/pixman-combine32.c</item>
+        <item>pixman/pixman-combine64.c</item>
+        <item>pixman/pixman-general.c</item>
+        <item>pixman/pixman.c</item>
+        <item>pixman/pixman-fast-path.c</item>
+        <item>pixman/pixman-solid-fill.c</item>
+        <item>pixman/pixman-conical-gradient.c</item>
+        <item>pixman/pixman-linear-gradient.c</item>
+        <item>pixman/pixman-radial-gradient.c</item>
+        <item>pixman/pixman-bits-image.c</item>
+        <item>pixman/pixman-utils.c</item>
+        <item>pixman/pixman-edge.c</item>
+        <item>pixman/pixman-edge-accessors.c</item>
+        <item>pixman/pixman-trap.c</item>
+        <item>pixman/pixman-timer.c</item>
+        <item>pixman/pixman-matrix.c</item>
+    </array>
+
+    <target name="compile">
+        <call target="prepare"/>
+
+        <echo>Compiling pixman library</echo>
+
+        <for var="i" array="${files}">
+            <echo>-> ${i}</echo>
+            <gcc profile="y-lib-compile">
+                <input>${i}</input>
+                <output>objs/filename(${i}).o</output>
+                <include>./</include>
+                <include>./pixman</include>
+                <define key="HAVE_CONFIG_H"/>
+                <define key="PIXMAN_NO_TLS"/>
+            </gcc>
+        </for>
+
+        <echo>Linking pixman library</echo>
+        <echo>-> objs/libpixman.a</echo>
+
+        <ar>
+            <flag>-rc</flag>
+            <output>objs/libpixman.a</output>
+            <input>objs/*.o</input>
+        </ar>
+    </target>
+
+    <target name="install">
+        <copy from="objs/libpixman.a" to="${staticlibdir}/libpixman.a"/>
+
+        <echo>Installing pixman headers</echo>
+
+        <mkdir>${includedir}/pixman</mkdir>
+        <copy from="pixman/pixman.h" to="${includedir}/pixman"/>
+        <copy from="pixman/pixman-version.h" to="${includedir}/pixman"/>
+    </target>
+</build>
