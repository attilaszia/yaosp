<!--

This file is part of the yaosp build system

Copyright (c) 2009 Zoltan Kovacs

This program is free software; you can redistribute it and/or modify
it under the terms of version 2 of the GNU General Public License
as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

-->

<build default="all">
    <array name="files">
        <item>shell.c</item>
        <item>eval.c</item>
        <item>y.tab.c</item>
        <item>general.c</item>
        <item>make_cmd.c</item>
        <item>print_cmd.c</item>
        <item>dispose_cmd.c</item>
        <item>execute_cmd.c</item>
        <item>variables.c</item>
        <item>copy_cmd.c</item>
        <item>error.c</item>
        <item>expr.c</item>
        <item>flags.c</item>
        <item>jobs.c</item>
        <item>subst.c</item>
        <item>hashcmd.c</item>
        <item>hashlib.c</item>
        <item>mailcheck.c</item>
        <item>trap.c</item>
        <item>input.c</item>
        <item>unwind_prot.c</item>
        <item>pathexp.c</item>
        <item>sig.c</item>
        <item>test.c</item>
        <item>version.c</item>
        <item>alias.c</item>
        <item>array.c</item>
        <item>arrayfunc.c</item>
        <item>assoc.c</item>
        <item>braces.c</item>
        <item>bracecomp.c</item>
        <item>bashhist.c</item>
        <item>bashline.c</item>
        <item>list.c</item>
        <item>stringlib.c</item>
        <item>locale.c</item>
        <item>findcmd.c</item>
        <item>redir.c</item>
        <item>pcomplete.c</item>
        <item>pcomplib.c</item>
        <item>syntax.c</item>
        <item>xmalloc.c</item>
        <item>lib/sh/clktck.c</item>
        <item>lib/sh/clock.c</item>
        <item>lib/sh/getenv.c</item>
        <item>lib/sh/oslib.c</item>
        <item>lib/sh/setlinebuf.c</item>
        <item>lib/sh/strnlen.c</item>
        <item>lib/sh/itos.c</item>
        <item>lib/sh/zread.c</item>
        <item>lib/sh/zwrite.c</item>
        <item>lib/sh/shtty.c</item>
        <item>lib/sh/shmatch.c</item>
        <item>lib/sh/eaccess.c</item>
        <item>lib/sh/netconn.c</item>
        <item>lib/sh/netopen.c</item>
        <item>lib/sh/timeval.c</item>
        <item>lib/sh/makepath.c</item>
        <item>lib/sh/pathcanon.c</item>
        <item>lib/sh/pathphys.c</item>
        <item>lib/sh/tmpfile.c</item>
        <item>lib/sh/stringlist.c</item>
        <item>lib/sh/stringvec.c</item>
        <item>lib/sh/spell.c</item>
        <item>lib/sh/shquote.c</item>
        <item>lib/sh/strtrans.c</item>
        <item>lib/sh/strindex.c</item>
        <item>lib/sh/snprintf.c</item>
        <item>lib/sh/mailstat.c</item>
        <item>lib/sh/fmtulong.c</item>
        <item>lib/sh/fmtullong.c</item>
        <item>lib/sh/fmtumax.c</item>
        <item>lib/sh/xstrchr.c</item>
        <item>lib/sh/zcatfd.c</item>
        <item>lib/sh/zmapfd.c</item>
        <item>lib/sh/winsize.c</item>
        <item>lib/sh/wcsdup.c</item>
        <item>lib/sh/fpurge.c</item>
        <item>lib/sh/zgetline.c</item>
        <item>lib/sh/mbscmp.c</item>
        <item>lib/sh/uconvert.c</item>
        <item>lib/sh/ufuncs.c</item>
        <item>lib/sh/casemod.c</item>
        <item>lib/sh/fdprintf.c</item>
        <item>lib/sh/input_avail.c</item>
        <item>lib/glob/glob.c</item>
        <item>lib/glob/strmatch.c</item>
        <item>lib/glob/smatch.c</item>
        <item>lib/glob/xmbsrtowcs.c</item>
    </array>

    <array name="files_builtins">
        <item>builtins/builtins.c</item>
        <item>builtins/alias.c</item>
        <item>builtins/bind.c</item>
        <item>builtins/break.c</item>
        <item>builtins/builtin.c</item>
        <item>builtins/caller.c</item>
        <item>builtins/cd.c</item>
        <item>builtins/colon.c</item>
        <item>builtins/command.c</item>
        <item>builtins/common.c</item>
        <item>builtins/declare.c</item>
        <item>builtins/echo.c</item>
        <item>builtins/enable.c</item>
        <item>builtins/eval.c</item>
        <item>builtins/evalfile.c</item>
        <item>builtins/evalstring.c</item>
        <item>builtins/exec.c</item>
        <item>builtins/exit.c</item>
        <item>builtins/fc.c</item>
        <item>builtins/fg_bg.c</item>
        <item>builtins/hash.c</item>
        <item>builtins/help.c</item>
        <item>builtins/history.c</item>
        <item>builtins/jobs.c</item>
        <item>builtins/kill.c</item>
        <item>builtins/let.c</item>
        <item>builtins/mapfile.c</item>
        <item>builtins/pushd.c</item>
        <item>builtins/read.c</item>
        <item>builtins/return.c</item>
        <item>builtins/set.c</item>
        <item>builtins/setattr.c</item>
        <item>builtins/shift.c</item>
        <item>builtins/source.c</item>
        <item>builtins/suspend.c</item>
        <item>builtins/test.c</item>
        <item>builtins/times.c</item>
        <item>builtins/trap.c</item>
        <item>builtins/type.c</item>
        <item>builtins/ulimit.c</item>
        <item>builtins/umask.c</item>
        <item>builtins/wait.c</item>
        <item>builtins/getopts.c</item>
        <item>builtins/shopt.c</item>
        <item>builtins/printf.c</item>
        <item>builtins/getopt.c</item>
        <item>builtins/bashgetopt.c</item>
        <item>builtins/complete.c</item>
    </array>

    <array name="files_readline">
        <item>lib/readline/readline.c</item>
        <item>lib/readline/vi_mode.c</item>
        <item>lib/readline/funmap.c</item>
        <item>lib/readline/keymaps.c</item>
        <item>lib/readline/parens.c</item>
        <item>lib/readline/search.c</item>
        <item>lib/readline/rltty.c</item>
        <item>lib/readline/complete.c</item>
        <item>lib/readline/bind.c</item>
        <item>lib/readline/isearch.c</item>
        <item>lib/readline/display.c</item>
        <item>lib/readline/signals.c</item>
        <item>lib/readline/util.c</item>
        <item>lib/readline/kill.c</item>
        <item>lib/readline/undo.c</item>
        <item>lib/readline/macro.c</item>
        <item>lib/readline/input.c</item>
        <item>lib/readline/callback.c</item>
        <item>lib/readline/terminal.c</item>
        <item>lib/readline/text.c</item>
        <item>lib/readline/nls.c</item>
        <item>lib/readline/misc.c</item>
        <item>lib/readline/history.c</item>
        <item>lib/readline/histexpand.c</item>
        <item>lib/readline/histfile.c</item>
        <item>lib/readline/histsearch.c</item>
        <item>lib/readline/savestring.c</item>
        <item>lib/readline/mbutil.c</item>
        <item>lib/readline/tilde.c</item>
        <item>lib/readline/compat.c</item>
    </array>

    <target name="clean">
        <delete>objs/builtins/*</delete>
        <rmdir>objs/builtins</rmdir>
        <delete>objs/readline/*</delete>
        <rmdir>objs/readline</rmdir>
        <delete>objs/*</delete>
        <rmdir>objs</rmdir>
    </target>

    <target name="prepare" type="private">
        <mkdir>objs</mkdir>
        <mkdir>objs/readline</mkdir>
        <mkdir>objs/builtins</mkdir>
    </target>

    <target name="compile">
        <call target="prepare"/>

        <echo>Compiling bash 4.0</echo>

        <for var="i" array="${files}">
            <echo>-> ${i}</echo>
            <gcc>
                <input>${i}</input>
                <output>objs/filename(${i}).o</output>
                <include>../../../include</include>
                <include>../../../../build/crosscompiler/lib/gcc/i686-pc-yaosp/4.3.3/include</include>
                <include>./</include>
                <include>./include</include>
                <include>./lib</include>
                <flag>-c</flag>
                <flag>-O2</flag>
                <flag>-m32</flag>
                <flag>-Wall</flag>
                <flag>-nostdinc</flag>
                <flag>-nostdlib</flag>
                <flag>-fno-builtin</flag>
                <flag>-fno-strict-aliasing</flag>
                <define key="HAVE_CONFIG_H"/>
                <define key="SHELL"/>
                <define key="_POSIX_VERSION"/>
                <define key="CONF_MACHTYPE">"i686-pc-yaosp"</define>
                <define key="CONF_HOSTTYPE">"i386"</define>
                <define key="CONF_OSTYPE">"yaosp"</define>
                <define key="LOCALEDIR">"/yaosp/system/locale"</define>
                <define key="PACKAGE">"bash"</define>
                <define key="MUST_UNBLOCK_CHLD"/>
            </gcc>
        </for>

        <for var="i" array="${files_builtins}">
            <echo>-> ${i}</echo>
            <gcc>
                <input>${i}</input>
                <output>objs/builtins/filename(${i}).o</output>
                <include>../../../include</include>
                <include>../../../../build/crosscompiler/lib/gcc/i686-pc-yaosp/4.3.3/include</include>
                <include>./</include>
                <include>./include</include>
                <include>./lib</include>
                <flag>-c</flag>
                <flag>-O2</flag>
                <flag>-m32</flag>
                <flag>-Wall</flag>
                <flag>-nostdinc</flag>
                <flag>-nostdlib</flag>
                <flag>-fno-builtin</flag>
                <flag>-fno-strict-aliasing</flag>
                <define key="HAVE_CONFIG_H"/>
                <define key="SHELL"/>
                <define key="_POSIX_VERSION"/>
                <define key="CONF_MACHTYPE">"i686-pc-yaosp"</define>
                <define key="CONF_HOSTTYPE">"i386"</define>
                <define key="CONF_OSTYPE">"yaosp"</define>
                <define key="LOCALEDIR">"/yaosp/system/locale"</define>
                <define key="PACKAGE">"bash"</define>
            </gcc>
        </for>

        <for var="i" array="${files_readline}">
            <echo>-> ${i}</echo>
            <gcc>
                <input>${i}</input>
                <output>objs/readline/filename(${i}).o</output>
                <include>../../../include</include>
                <include>../../../../build/crosscompiler/lib/gcc/i686-pc-yaosp/4.3.3/include</include>
                <include>./</include>
                <include>./include</include>
                <include>./lib</include>
                <flag>-c</flag>
                <flag>-O2</flag>
                <flag>-m32</flag>
                <flag>-Wall</flag>
                <flag>-nostdinc</flag>
                <flag>-nostdlib</flag>
                <flag>-fno-builtin</flag>
                <flag>-fno-strict-aliasing</flag>
                <define key="HAVE_CONFIG_H"/>
                <define key="SHELL"/>
                <define key="_POSIX_VERSION"/>
                <define key="CONF_MACHTYPE">"i686-pc-yaosp"</define>
                <define key="CONF_HOSTTYPE">"i386"</define>
                <define key="CONF_OSTYPE">"yaosp"</define>
                <define key="LOCALEDIR">"/yaosp/system/locale"</define>
                <define key="PACKAGE">"bash"</define>
            </gcc>
        </for>

        <echo>Linking bash 4.0</echo>
        <echo>-> objs/bash</echo>

        <gcc>
            <input>objs/*.o</input>
            <input>objs/builtins/*.o</input>
            <input>objs/readline/*.o</input>
            <input>../../../lib/start/objs/libstart.a</input>
            <input>../../../thirdparty/ncurses-5.7/ncurses-5.7/objs/libncurses.a</input>
            <input>../../../lib/c/objs/libc.a</input>
            <output>objs/bash</output>
            <flag>-m32</flag>
            <flag>-Xlinker</flag>
            <flag>--script=../../../../scripts/i386_app.lnk</flag>
            <flag>-nostartfiles</flag>
            <flag>-nodefaultlibs</flag>
        </gcc>
    </target>

    <target name="install">
        <echo>Installing bash binary</echo>

        <copy from="objs/bash" to="../../../../build/image/application/bash"/>
    </target>

    <target name="all">
        <call target="clean"/>
        <call target="compile"/>
        <call target="install"/>
    </target>
</build>
