<!--

This file is part of the yaosp build system

Copyright (c) 2009 Zoltan Kovacs

This program is free software; you can redistribute it and/or modify
it under the terms of version 2 of the GNU General Public License
as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

-->

<build default="all">
    <array name="files_i386">
        <item>arch/i386/syscall.S</item>
    </array>

    <array name="files">
        <item>src/start.c</item>
        <item>src/opendir.c</item>
        <item>src/readdir.c</item>
        <item>src/closedir.c</item>
        <item>src/stdlib/malloc.c</item>
        <item>src/stdlib/abort.c</item>
        <item>src/stdlib/getenv.c</item>
        <item>src/stdlib/strtol.c</item>
        <item>src/stdlib/strtoul.c</item>
        <item>src/stdlib/atoi.c</item>
        <item>src/string/memset.c</item>
        <item>src/string/memcpy.c</item>
        <item>src/string/memcmp.c</item>
        <item>src/string/memmove.c</item>
        <item>src/string/memchr.c</item>
        <item>src/string/strchr.c</item>
        <item>src/string/strrchr.c</item>
        <item>src/string/strlen.c</item>
        <item>src/string/strcmp.c</item>
        <item>src/string/strncmp.c</item>
        <item>src/string/strdup.c</item>
        <item>src/string/strcpy.c</item>
        <item>src/string/strncpy.c</item>
        <item>src/string/strstr.c</item>
        <item>src/unistd/sbrk.c</item>
        <item>src/unistd/fork.c</item>
        <item>src/unistd/execve.c</item>
        <item>src/unistd/dup2.c</item>
        <item>src/unistd/write.c</item>
        <item>src/unistd/read.c</item>
        <item>src/unistd/exit.c</item>
        <item>src/unistd/getdents.c</item>
        <item>src/unistd/close.c</item>
        <item>src/unistd/execvp.c</item>
        <item>src/unistd/fchdir.c</item>
        <item>src/unistd/isatty.c</item>
        <item>src/fcntl/open.c</item>
        <item>src/stdio/streams.c</item>
        <item>src/stdio/ferror.c</item>
        <item>src/stdio/fgetc.c</item>
        <item>src/stdio/getc.c</item>
        <item>src/stdio/fgets.c</item>
        <item>src/stdio/fputc.c</item>
        <item>src/stdio/fputs.c</item>
        <item>src/stdio/__printf.c</item>
        <item>src/stdio/printf.c</item>
        <item>src/stdio/fprintf.c</item>
        <item>src/stdio/snprintf.c</item>
        <item>src/stdio/fileno.c</item>
        <item>src/stdio/feof.c</item>
        <item>src/stdio/fflush.c</item>
        <item>src/stdio/ungetc.c</item>
        <item>src/stdio/clearerr.c</item>
        <item>src/sys/waitpid.c</item>
        <item>src/sys/stat.c</item>
        <item>src/ctype/isalpha.c</item>
        <item>src/ctype/isupper.c</item>
        <item>src/ctype/islower.c</item>
        <item>src/ctype/isdigit.c</item>
        <item>src/ctype/isxdigit.c</item>
        <item>src/ctype/isalnum.c</item>
        <item>src/ctype/isspace.c</item>
        <item>src/ctype/tolower.c</item>
        <item>src/ctype/toupper.c</item>
        <item>src/yaosp/debug.c</item>
        <item>src/yaosp/semaphore.c</item>
    </array>

    <target name="clean">
        <delete>objs/arch/*</delete>
        <rmdir>objs/arch</rmdir>
        <delete>objs/*</delete>
        <rmdir>objs</rmdir>
    </target>

    <target name="prepare" type="private">
        <mkdir>objs</mkdir>
        <mkdir>objs/arch</mkdir>
    </target>

    <target name="compile">
        <call target="prepare"/>

        <echo>Compiling C library</echo>

        <for var="i" array="${files_i386}">
            <echo>-> ${i}</echo>
            <gcc>
                <input>${i}</input>
                <output>objs/arch/filename(${i}).o</output>
                <flag>-c</flag>
                <flag>-O2</flag>
                <flag>-m32</flag>
                <flag>-Wall</flag>
                <flag>-nostdinc</flag>
                <flag>-nostdlib</flag>
                <flag>-fno-builtin</flag>
            </gcc>
        </for>

        <for var="i" array="${files}">
            <echo>-> ${i}</echo>
            <gcc>
                <input>${i}</input>
                <output>objs/filename(${i}).o</output>
                <include>../../include</include>
                <flag>-c</flag>
                <flag>-O2</flag>
                <flag>-m32</flag>
                <flag>-Wall</flag>
                <flag>-nostdinc</flag>
                <flag>-nostdlib</flag>
                <flag>-fno-builtin</flag>
                <define key="HAVE_MMAP">0</define>
                <define key="USE_LOCKS">1</define>
                <define key="YAOSP"/>
            </gcc>
        </for>

        <echo>Linking C library</echo>
        <echo>-> objs/libc.a</echo>

        <exec executable="ar">
            <arg>-rc</arg>
            <arg>objs/libc.a</arg>
            <arg>objs/*.o</arg>
            <arg>objs/arch/*.o</arg>
        </exec>
    </target>

    <target name="install">
    </target>

    <target name="all">
        <call target="clean"/>
        <call target="compile"/>
        <call target="install"/>
    </target>
</build>
